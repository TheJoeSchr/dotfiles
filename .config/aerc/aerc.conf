# vim: set filetype=config:
[general]
log-file = "~/.config/aerc/aerc.log"  # Optional: Pfad zur Logdatei
log-level = trace

default-save-path="~/.local/share/aerc/" # Used as a default path for save operations if no other path is specified. ~ is expanded to the current user home dir.
log-file="~/.local/share/aerc/aerclog.txt" # Output log messages to specified file. A path starting with ~/ is expanded to the user home dir. When redirecting aerc's output to a file using > shell redirection, this setting is ignored and log messages are printed to stdout.
empty-subject-warning=true # Warn before sending emails with an empty subject

[ui]
auto-mark-read=false # Automatically set the "seen" flag when a message is opened in the message viewer. Default: true
border-char-vertical=" " # Uncomment to use box-drawing characters for vertical and horizontal borders. Default: " "
client-threads-delay=50ms # Debounce client-side thread building Default: 50ms
column-flags = {{.Flags | join " "}}
column-separator="  " # String separator inserted between columns. When the column width specifier is an exact number of characters, the separator is added to it (i.e. the exact width will be fully available for the column contents). Default: "  "
dirlist-delay=500ms # Delay after which the messages are actually listed when entering a directory. This avoids loading messages when skipping over folders and makes the UI more responsive. If you do not want that, set it to 0s. Default: 200ms
dirlist-tree=true # Display the directory list as a foldable tree that allows to collapse and expand the folders. Default: false
empty-message = "Tumbleweed"
force-client-threads=false # Force client-side thread building Default: false
fuzzy-complete=true # Activates fuzzy search in commands and their arguments: the typed string is searched in the command or option in any position, and need not be consecutive characters in the command or option. Default: false
icon-attachment=󰏢
icon-new ="󰇮 "
icon-old =󱙡
icon-flagged =󰛏
icon-draft =󰻣
icon-marked =󰪱
icon-replied =
index-columns=date<8,name<17,subject<*,flags<4 # Describes the format for each row in a mailbox view. This is a comma separated list of column names with an optional align and width suffix. After the column name, one of the '<' (left), ':' (center) or '>' (right) alignment characters can be added (by default, left) followed by an optional width specifier. The width is either an integer representing a fixed number of characters, or a percentage between 1% and 99% representing a fraction of the terminal width. It can also be one of the '*' (auto) or '=' (fit) special width specifiers. Auto width columns will be equally attributed the remaining terminal width. Fit width columns take the width of their contents. If no width specifier is set, '*' is used by default.
next-message-on-delete=false # Moves to next message when the current message is deleted Default: true
pinned-tab-marker='*' # Marker to show before a pinned tab's name. Default: `
styleset-name=dracula # Sets the styleset to use for the aerc ui elements. Default: default
this-day-time-format=15:04 # Index-only time format for messages that were received/sent today. If this is not specified, timestamp-format is used instead.
this-week-time-format=Mon # Index-only time format for messages that were received/sent within the last 7 days. If this is not specified, timestamp-format is used instead.
this-year-time-format=06-01-02 # Index-only time format for messages that were received/sent this year. If this is not specified, timestamp-format is used instead.
threading-enabled=true # Enable a threaded view of messages. If this is not supported by the backend (IMAP server or notmuch), threads will be built by the client. Default: false
timestamp-format=06-01-02 15:04 # See time.Time#Format at https://godoc.org/time#Time.Format Default: 2006-01-02 03:04 PM (ISO 8601 + 12 hour time)

[statusline]
status-columns = left<*,center>=,right>* # Describes the format for each row in the statusline.
column-left = {{.Folder}} # Specifies the format for the left column. Default: {{.Folder}}
column-center = {{.PendingKeys}} {{.TrayInfo}} {{.StatusInfo}} # Specifies the format for the center column. Default: {{.StatusInfo}}
column-right = {{if gt (len .From) 0}}{{(index .From 0).Address}}{{else}}No Semder{{end}} {{.Size | humanReadable}} # Specifies the format for the right column. Default: {{.Date}}
separator=" | " # Specifies the separator between grouped statusline elements. Default: " | "
#display-mode=text # Defines the mode for displaying the status elements. Options: text, icon Default: text

[viewer]
text/plain = less %s
text/html = w3m -T text/html %s
# application/pdf = open %s
image/* = open %s
audio/* = afplay %s# The viewer section 
# pager = w3m -F -I UTF-8 -T text/html -dump # :w3m

# pager = less -Rc -+S  # Command to use for viewing messages. Default: less -Rc -+S --wordwrap

# Layout of headers when viewing a message. To display multiple headers in the same row, separate them with a pipe, e.g. "From|To". Rows will be hidden if none of their specified headers are present in the message. Default: From|To,Cc|Bcc,Date,Subject
#header-layout=From|To,Cc|Bcc,Date,Subject
# header-layout=From,To,Cc|Bcc,Date,Subject

# Display pdf attachments inline. Default: false
# [mimeviewer]

# Display image attachments

# Whether to always show the mimetype of an email, even when it is just a single part Default: false
# always-show-mime=true

[compose]
# Specifies the command to run the editor with. It will be shown in an embedded terminal, though it may also launch a graphical window if the environment supports it. Defaults to $EDITOR, or vi. editor= 

# Default header fields to display when composing a message. To display multiple headers in the same row, separate them with a pipe, e.g. "To|From". Default: To|From,Subject
header-layout=To,Cc,Bcc,From,Subject

# Specifies the command to be used to tab-complete email addresses. Any occurrence of "%s" in the address-book-cmd will be replaced with what the user has typed so far. The command must output the completions to standard output, one completion per line. Each line must be tab-delimited, with an email address occurring as the first field. Only the email address field is required. The second field, if present, will be treated as the contact name. Additional fields are ignored. This parameter can also be set per account in accounts.conf.
#address-book-cmd=

# Specifies the command to be used to select attachments. Any occurence of '%s' in the file-picker-cmd will be replaced the argument <arg> to :attach -m <arg>. The command must output the selected files to standard output, one file per line.
file-picker-cmd=osascript -e 'tell application "Finder" to choose file with prompt "Select File to Attach"' -e 'POSIX path of result'
# file-picker-cmd=find . -type f | fzf --multi --query="%s"

# Allow to address yourself when replying Default: true
reply-to-self=true

# Warn before sending an email that matches the specified regexp but does not have any attachments. Leave empty to disable this feature. Uses Go's regexp syntax, documented at https://golang.org/s/re2syntax. The "(?im)" flags are set by default (case-insensitive and multi-line). Example: no-attachment-warning=^[^>]*attach(ed|ment)
no-attachment-warning=true

[multipart-converters]
# Converters allow to generate multipart/alternative messages by converting the main text/plain part into any other MIME type. Only exact MIME types are accepted. The commands are invoked with sh -c and are expected to output valid UTF-8 text. Example (obviously, this requires that you write your main text/plain body using the markdown syntax):
text/html=rst2html5 --embed-stylesheet --no-doc-title

[filters]
# Filters allow you to pipe an email body through a shell command to render certain emails differently, e.g. highlighting them with ANSI escape codes. The commands are invoked with sh -c. The following folders are appended to the system $PATH to allow referencing filters from their name only:
# The first filter which matches the email's mimetype will be used, so order them from most to least specific. You can also match on non-mimetypes, by prefixing with the header to match against (non-case-sensitive) and a comma, e.g. subject,text will match a subject which contains "text". Use header,~regex to match against a regex.
text/plain = sed 's/^>\+.*/\x1b[36m&\x1b[0m/'
# text/plain = less
text/html = w3m -T text/html
application/pdf = open
image/*=catimg -w $(tput cols) -
# image/*=catimg
# image/* = open
# audio/* = afplay

# text/plain=bat -p # 
# text/html=w3m -F
# text/plain=less -Rc -+S
# text/plain=less -Rc
# text/plain=bat -p # 

[openers]
# Openers allow you to specify the command to use for the :open action on a per-MIME-type basis. {} is expanded as the temporary filename to be opened. If it is not encountered in the command, the temporary filename will be appened to the end of the command. Examples:
text/plain=nvim -R
text/html=w3m -F -I UTF-8 -T text/html -dump
message/rfc822=thunderbird

[triggers]
# Triggers specify commands to execute when certain events occur. Example: new-email=exec notify-send "New email from %n" "%s" Executed when a new email arrives in the selected folder

[hooks]
mail-received = notify-send -a "$AERC_SUBJECT" "New email from $AERC_FROM_NAME"

[templates]
# Templates are used to populate email bodies automatically. The directories where the templates are stored. It takes a colon-separated list of directories. If this is unset or if a template cannot be found, the following paths will be used as a fallback in that order:
#   ${XDG_CONFIG_HOME:-~/.config}/aerc/templates
#   ${XDG_DATA_HOME:-~/.local/share}/aerc/templates
#   /usr/local/share/aerc/templates
#   /usr/share/aerc/templates
# template-dirs=
# The default template to be used for quoted replies. default: quoted_reply
#quoted-reply=quoted_reply

# The default template to be used for forward as body. default: forward_as_body
#forwards=forward_as_body
