[core]
  editor = nvim
  autocrlf = false
  symlinks = true
  longPaths = true
  excludesfile =
[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta
[user]
  name = Joe Schr
  email = jozeph.oftheinternet+git@gmail.com
[user]
  name = Joe Schr
  email = 8218910+TheJoeSchr@users.noreply.github.com
[push]
  autoSetupRemote = true
  default = simple
[alias]
  ap = add --patch
  br = branch
  ca = !git ci --amend
  cc = cim
  ce = commit -C HEAD --amend
  ci = commit -v
  cim = !git ci -m
  # print difference in stdout
  df = "!f() { GIT_PAGER=delta GIT_EXTERNAL_DIFF=difft git diff --histogram $@; }; f"
  # real original `git df`
  dfoo = !git diff --histogram && git diff --histogram --cached
  # original `git df` now with color
  dfo = !"GIT_PAGER=delta GIT_EXTERNAL_DIFF=difft git diff --histogram && git diff --histogram --cached"
  # original `git df` now with color(delta) and difftastic
  dfd = "!f() { GIT_PAGER=delta GIT_EXTERNAL_DIFF=difft git diff --histogram $@ && git diff --histogram --cached $@ ; }; f"
  # Difftastic aliases
  # difftool opens nvimdiff for every file
  dfs = difftool
  # Show diff with word-level details
  dftw = "!f() { GIT_EXTERNAL_DIFF=difft git diff --word-diff $@; }; f"
  # Show diff of staged changes
  dfts = difftool --staged
  # Show diff for specific commit
  dftc = "!f() { GIT_EXTERNAL_DIFF=difft git diff $1^..$ }; f"
  # Show diff for last commit
  dftl = difftool HEAD^..HEAD
  # Show diff for pull request (needs PR number)
  dftpr = "!f() { GIT_EXTERNAL_DIFF=difft git diff origin/main...pull/$1/head; }; f"
  dlog = -c diff.external=difft log -p --ext-diff
  feat = merge --no-ff --no-commit
  go = checkout
  # rebase taking all remote changes
  # ours is remote, theirs is local
  pl = pull --rebase -s recursive -X ours
  ps = push
  ;reflog
  re = !gitk --all --date-order $(git log -g --pretty=%H)
  ri = rebase --interactive
  rr = rebase --continue
  sh = stash save
  st = status
  type = cat-file -t
  dump = cat-file -p
  ; delete remote branch
  branch-delete-remote = push --delete
  delete-remote-branch = push --delete
    # Push the new branch, set local branch to track the new remote
  ps--set-upstream = push --set-upstream origin
  unadd = reset HEAD
  unstage = reset
  uncommit = reset --soft HEAD^
  staged = diff --cached
  ctags = "!.git/hooks/ctags"uncommit = reset HEAD^
  stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git stash store -m \"$2\" $rev; }; _"
  stash-all = stash -u
  # shorthands
  gbdr = branch-delete-remote
  rmdb = branch-delete-remote
  # visualize branch relationships
  lgv = log --graph --all --format=oneline --simplify-by-decoration
  # logging commands (hardcoded PAGER because of nvimpager not working)
  lg-nvim = !"PAGER='/usr/bin/env nvimpager' git log"
  lg-paged = !"PAGER='/usr/bin/env less -R' git log"
  # pretty format
  his = lg-paged --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h:%C(reset) %C(white)%s%C(reset) %C(auto)%d%C(reset) | %C(bold green)[%ar]%C(reset) %C(dim white)%an%C(reset)'
  hisnvim = lg-nvim --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h:%C(reset) %C(white)%s%C(reset) %C(auto)%d%C(reset) | %C(bold green)[%ar]%C(reset) %C(dim white)%an%C(reset)'
  hispure = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h:%C(reset) %C(white)%s%C(reset) %C(auto)%d%C(reset) | %C(bold green)[%ar]%C(reset) %C(dim white)%an%C(reset)'
  # long pretty format
  lgl  = his --pretty='%C(bold green)[%h:%ar]%C(reset)  %an %d%n%s%n%w(72,4,4)%b' --date=short --graph --decorate
  # full short log
  lg   = !git his --decorate --graph
  # full short log
  lgn   = !git hisnvim --decorate --graph
  # log only the last five commits
  l5  = !git hispure -5
  # log only the last five commits
  lgs  = !git l5
  # log including which files changed
  lst  = !git lg --stat
  # log including every individual changed line
  lpa  = !git lg -p
  # log including every individual changed line
  ldf  = !git lg -p
  # show everything about the head commit
  last = !git lgl -1 --patch
  lgh  = !git lgl -1 --stat
  # show relationships between branches
  gov = lg --simplify-by-decoration
  lga  = !git his --all 
  gl = lg

  # show stats and last 5 commits
  st   = !"git lgs;  git status"
  # file logging commands
  # commits including desired files
  lf  = !git his --follow --
  # long-format commits
  lfl = !git lgl --follow --
  # stat-style commits
  lfst = !git lst --follow --
  # full patch commits
  lfpa = !git lpa --follow --
  show-file-history = !git lfpa



[rerere]
  enabled = true
[mergetool]
  keepTemporaries = false
  prompt = false
[merge]
    ; conflictStyle = zdiff
  conflictstyle = diff3
  tool = nvimdiff
[http]
  sslVerify = false
  cookiefile = C:/Users/Joe/AppData/Roaming/.home/.gitcookies
[winUpdater]
  recentlySeenVersion = 2.15.1.windows.2
[branch]
  autosetuprebase = always
[help]
  autocorrect = 20
[pull]
  rebase = merges
  autostash = true
[credential "https://github.com"]
  helper = !/usr/bin/gh auth git-credential
[init]
  defaultBranch = main
[interactive]
    diffFilter = delta --color-only
[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color
    side-by-side = true
    line-numbers = true
    decorations = true
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-decoration-style = cyan box ul
    minus-style = syntax "#3f0001"
    minus-emph-style = syntax "#901011"
    plus-style = syntax "#003800"
    plus-emph-style = syntax "#009800"
[diff]
    colorMoved = default
    # Use difftastic as the default diff tool
    external = difft
    tool = nvimdiff
[rebase]
  autoStash = true


